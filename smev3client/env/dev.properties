# ActiveMQ connection
activemq.url=tcp://activemq:61616
activemq.username=admin
activemq.password=admin

# FTP
ftp.port=2021
ftp.username=smev3client
ftp.password=smev3clientpassword

# Spring devtools
devtools.secret=thisismysecret

# logging
logstash.url=logstash:4560
logging.gelf.address=udp://localhost:12201
logging.level=DEBUG

# smev3mock
smev3mock.http.port=8091
smev3mock.docker.compose.ports=- 8091:8091

# configserver
configserver.password=password
configserver.http.port=8888
configserver.docker.compose.restart=never
configserver.logging.level.business=DEBUG
configserver.logging.level.raw=INFO

# pollers
pollers.http.port=8092
pollers.hazelcast.port=5701
pollers.docker.compose.restart=never
pollers.docker.compose.ports=- 8092:8092\n\
\ \ \ \ \ \ - 5701:5701
pollers.logging.level.business=DEBUG
pollers.logging.level.raw=INFO

# pushers
pushers.http.port=8096
pushers.docker.compose.restart=never
pushers.docker.compose.ports=- 8096:8096
pushers.logging.level.business=DEBUG
pushers.logging.level.raw=INFO
pushers.routes.vis2smev.inbound=activemq:queue:pushersVis2SmevInboundQueue
pushers.routes.log=log:ru.otr.integration.smev3client.pushers?level=DEBUG&showAll=true&multiline=true

# smev3adapter
smev3adapter.http.port=8090
smev3adapter.routes.log=log:ru.otr.integration.smev3client.smev3adapter?level=DEBUG&showAll=true&multiline=true
#smev3adapter.routes.smev=http://smev3mock:${smev3mock.http.port}/soap-api/SmevMessageExchangeService
smev3adapter.routes.smev=http://lbss:8080/lbss-web/SMEVMessageExchangeService
smev3adapter.docker.compose.restart=never
smev3adapter.docker.compose.ports=- 8090:8090
smev3adapter.logging.level.business=DEBUG
smev3adapter.logging.level.raw=INFO

# smev3core
smev3core.http.port=8093
smev3core.routes.log=log:ru.otr.integration.smev3client.smev3core?level=DEBUG&showAll=true&multiline=true
smev3core.routes.Smev2Vis.preprocessor.inbound=activemq:queue:smev3corePreprocessorInboundQueueSmev2Vis
smev3core.routes.Smev2Vis.preprocessor.inbound.GetRequestResponseQueue=activemq:queue:GetRequestResponseQueue
smev3core.routes.Smev2Vis.preprocessor.inbound.GetResponseResponseQueue=activemq:queue:GetResponseResponseQueue
smev3core.routes.Smev2Vis.GetStatusResponseQueue=activemq:queue:GetStatusResponseQueue
smev3core.routes.Smev2Vis.postprocessor.inbound=activemq:queue:smev3corePostprocessorInboundQueueSmev2Vis
smev3core.routes.Vis2Smev.preprocessor.inbound=activemq:queue:smev3corePreprocessorInboundQueueVis2Smev
smev3core.routes.Vis2Smev.preprocessor.inbound.SendRequestResponseQueue=activemq:queue:SendRequestResponseQueue
smev3core.routes.Vis2Smev.preprocessor.inbound.SendResponseResponseQueue=activemq:queue:SendResponseResponseQueue
smev3core.routes.Vis2Smev.postprocessor.inbound=activemq:queue:smev3corePostprocessorInboundQueueVis2Smev
smev3core.docker.compose.restart=never
smev3core.docker.compose.ports=- 8093:8093
smev3core.logging.level.business=DEBUG
smev3core.logging.level.raw=INFO

# ufosadapter
ufosadapter.http.port=8094
ufosadapter.routes.toUfos.inbound=activemq:queue:ufosAdapterInboundQueueSmev2Vis
ufosadapter.routes.toUfos.outbound=activemq:queue:ufosAdapterOutboundQueueSmev2Vis
ufosadapter.routes.fromUfos.inbound=activemq:queue:ufosAdapterInboundQueueVis2Smev
ufosadapter.routes.log=log:ru.otr.integration.smev3client.ufosadapter?level=DEBUG&showAll=true&multiline=true
ufosadapter.docker.compose.restart=never
ufosadapter.docker.compose.ports=- 8094:8094
ufosadapter.logging.level.business=DEBUG
ufosadapter.logging.level.raw=INFO

# replication
replication.http.port=8095
replication.routes.replicationService.inbound.queue=activemq:queue:replicationInboundQueue
replication.routes.replicationService.log=log:ru.otr.integration.smev3client.ufosadapter?level=DEBUG&showAll=true&multiline=true
replication.docker.compose.restart=never
replication.docker.compose.ports=- 8095:8095
replication.logging.level.business=DEBUG
replication.logging.level.raw=INFO