# ActiveMQ connection
activemq.url=tcp://activemq:61616
activemq.username=admin
activemq.password=admin

# FTP
ftp.port=2021
ftp.username=smev3client
ftp.password=smev3clientpassword
smev.ftp.host=ftp
smev.ftp.port=2021
smev.ftp.username=smev3client
smev.ftp.password=smev3clientpassword

# Spring devtools
devtools.secret=thisismysecret

# logging
logstash.url=logstash:4560
logging.gelf.address=udp://localhost:12201
logging.level=DEBUG

camel.endpoint.logging=log:ru.otr.integration.smev3client?level=DEBUG&showAll=true&multiline=true

# smev3mock2
smev3mock2.http.port=8091
smev3mock2.docker.compose.ports=- 8091:8091
smev3mock2.logging.level.raw=INFO
smev3mock2.logging.level.business=INFO


#ftpsmev
smev3mock2.ftp.port=3333
smev3mock2.ftp.host=ftpsmev
smev3mock2.ftp.user=smev3client
smev3mock2.ftp.password=smev3clientpassword

# eureka
eureka.http.port=8097
eureka.docker.compose.restart=never
eureka.docker.compose.ports=- 8097:8097
eureka.logging.level.business=INFO
eureka.logging.level.raw=INFO
eureka.logging.level.camel.tracer=INFO
eureka.logging.level.metrics=DEBUG

# hystrix
hystrix.http.port=8099
hystrix.appConfig=pollers,smev3adapter
hystrix.docker.compose.restart=never
hystrix.docker.compose.ports=- 8099:8099
hystrix.logging.level.business=INFO
hystrix.logging.level.raw=INFO
hystrix.logging.level.camel.tracer=INFO
hystrix.logging.level.metrics=DEBUG

# bpmengine
bpmengine.http.port=8098
bpmengine.docker.compose.restart=never
bpmengine.docker.compose.ports=- 8098:8098
bpmengine.logging.level.business=INFO
bpmengine.logging.level.raw=INFO
bpmengine.logging.level.camel.tracer=INFO
bpmengine.logging.level.metrics=DEBUG
bpmengine.db.username=activiti
bpmengine.db.password=activiti

# configserver
configserver.password=password
configserver.http.port=8888
configserver.docker.compose.restart=never
configserver.docker.compose.ports=- 8888:8888
configserver.logging.level.business=INFO
configserver.logging.level.raw=INFO
configserver.logging.level.camel.tracer=INFO
configserver.logging.level.metrics=DEBUG

# pollers
pollers.http.port=8092
pollers.hazelcast.port=5701
pollers.docker.compose.restart=never
pollers.docker.compose.ports=- 8092:8092\n\
\ \ \ \ \ \ - 5701:5701
pollers.logging.level.business=DEBUG
pollers.logging.level.raw=INFO
pollers.logging.level.camel.tracer=DEBUG
pollers.logging.level.metrics=DEBUG

# pushers
pushers.http.port=8096
pushers.routes.vis2smev.inbound=activemq:queue:pushersVis2SmevInboundQueue?concurrentConsumers=5&maxConcurrentConsumers=10&transacted=true&lazyCreateTransactionManager=true&destination.consumer.prefetchSize=1
pushers.docker.compose.restart=never
pushers.docker.compose.ports=- 8096:8096
pushers.logging.level.business=INFO
pushers.logging.level.raw=INFO
pushers.logging.level.camel.tracer=INFO
pushers.logging.level.metrics=DEBUG

# smev3adapter
smev3adapter.http.port=8090
#smev3adapter.routes.smev=http://smev3mock:${smev3mock.http.port}/soap-api/SmevMessageExchangeService
#smev3adapter.routes.smev=http://lbss:8080/lbss-web/SMEVMessageExchangeService
smev3adapter.routes.smev=http://smev3mock2:8091/mock-web/getrequestresponse
smev3adapter.docker.compose.restart=never
smev3adapter.docker.compose.ports=- 8090:8090
smev3adapter.logging.level.business=DEBUG
smev3adapter.logging.level.raw=INFO
smev3adapter.logging.level.camel.tracer=DEBUG
smev3adapter.logging.level.metrics=DEBUG

# smev3core
smev3core.http.port=8093
smev3core.routes.Smev2Vis.preprocessor.inbound.GetRequestResponseQueue=activemq:queue:GetRequestResponseQueue?concurrentConsumers=5&maxConcurrentConsumers=30&transacted=true&lazyCreateTransactionManager=true&destination.consumer.prefetchSize=1
smev3core.routes.Smev2Vis.preprocessor.inbound.GetResponseResponseQueue=activemq:queue:GetResponseResponseQueue?concurrentConsumers=5&maxConcurrentConsumers=10&transacted=true&lazyCreateTransactionManager=true&destination.consumer.prefetchSize=1
smev3core.routes.Smev2Vis.GetStatusResponseQueue=activemq:queue:GetStatusResponseQueue?concurrentConsumers=5&maxConcurrentConsumers=10&transacted=true&lazyCreateTransactionManager=true&destination.consumer.prefetchSize=1
smev3core.routes.Smev2Vis.postprocessor.inbound=activemq:queue:smev3corePostprocessorInboundQueueSmev2Vis?concurrentConsumers=5&maxConcurrentConsumers=30&transacted=true&lazyCreateTransactionManager=true&destination.consumer.prefetchSize=1
smev3core.routes.Vis2Smev.preprocessor.inbound=activemq:queue:Vis2SmevPreprocessorInboundQueue?concurrentConsumers=5&maxConcurrentConsumers=10&transacted=true&lazyCreateTransactionManager=true&destination.consumer.prefetchSize=1
smev3core.docker.compose.restart=never
smev3core.docker.compose.ports=- 8093:8093
smev3core.logging.level.business=INFO
smev3core.logging.level.raw=INFO
smev3core.logging.level.camel.tracer=INFO
smev3core.logging.level.metrics=DEBUG

# ufosadapter
ufosadapter.http.port=8094
ufosadapter.routes.toUfos.inbound=activemq:queue:ufosAdapterInboundQueueSmev2Vis?concurrentConsumers=5&maxConcurrentConsumers=30&transacted=true&lazyCreateTransactionManager=true&destination.consumer.prefetchSize=1
ufosadapter.routes.toUfos.outbound=activemq:queue:ufosAdapterOutboundQueueSmev2Vis?concurrentConsumers=5&maxConcurrentConsumers=30&transacted=true&lazyCreateTransactionManager=true&destination.consumer.prefetchSize=1
ufosadapter.routes.fromUfos.inbound=activemq:queue:ufosAdapterInboundQueueVis2Smev?concurrentConsumers=5&maxConcurrentConsumers=10&transacted=true&lazyCreateTransactionManager=true&destination.consumer.prefetchSize=1
ufosadapter.routes.callback.inbound.inboundQueue=activemq:queue:ufosAdapterCallbackInboundQueue?concurrentConsumers=5&maxConcurrentConsumers=10&transacted=true&lazyCreateTransactionManager=true&destination.consumer.prefetchSize=1
ufosadapter.routes.callback.outbound.outboundQueue=activemq:queue:ufosAdapterCallbackOutboundQueue?concurrentConsumers=5&maxConcurrentConsumers=10&transacted=true&lazyCreateTransactionManager=true&destination.consumer.prefetchSize=1
ufosadapter.docker.compose.restart=never
ufosadapter.docker.compose.ports=- 8094:8094
ufosadapter.logging.level.business=DEBUG
ufosadapter.logging.level.raw=INFO
ufosadapter.logging.level.camel.tracer=INFO
ufosadapter.logging.level.metrics=DEBUG

# replication
replication.http.port=8095
replication.routes.replicationService.inbound.queue=activemq:queue:replicationInboundQueue?concurrentConsumers=5&maxConcurrentConsumers=10&transacted=true&lazyCreateTransactionManager=true&destination.consumer.prefetchSize=1
replication.docker.compose.restart=never
replication.docker.compose.ports=- 8095:8095
replication.logging.level.business=INFO
replication.logging.level.raw=INFO
replication.logging.level.camel.tracer=INFO
replication.logging.level.metrics=DEBUG